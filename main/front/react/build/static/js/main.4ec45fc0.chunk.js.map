{"version":3,"sources":["store/auth-context.js","components/Auth/AuthForm.js","pages/AuthPage.js","pages/DashboardPage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","useState","setToken","contextValue","localStorage","setItem","removeItem","Provider","value","children","AuthForm","history","useHistory","usernameInputRef","useRef","passwordInputRef","authCtx","useContext","className","classes","container","image","alt","onSubmit","e","preventDefault","enteredUsername","current","enteredPassword","fetch","method","headers","body","JSON","stringify","username","password","then","res","ok","json","data","Error","description","access_token","replace","catch","console","log","control","type","id","required","ref","actions","AuthPage","DashboardPage","onClick","App","path","to","ReactDOM","render","document","getElementById","module","exports"],"mappings":"qMAEMA,EAAcC,IAAMC,cAAc,CACtCC,MAAO,GACPC,YAAY,EACZC,MAAO,SAACF,KACRG,OAAQ,eAGGC,EAAsB,SAACC,GAElC,MAA0BC,mBAAS,MAAnC,mBAAON,EAAP,KAAcO,EAAd,KAcMC,EAAe,CACnBR,MAAOA,EACPC,aAduBD,EAevBE,MAbmB,SAACF,GACpBO,EAASP,GACTS,aAAaC,QAAQ,QAASV,IAY9BG,OAToB,WACpBI,EAAS,MACTE,aAAaE,WAAW,WAU1B,OACE,cAACd,EAAYe,SAAb,CAAsBC,MAAOL,EAA7B,SACGH,EAAMS,YAKEjB,I,gBC0CAkB,EA3EE,WACf,IAAMC,EAAUC,cACVC,EAAmBC,mBACnBC,EAAmBD,mBAEnBE,EAAUC,qBAAWzB,GAoC3B,OACE,sBAAK0B,UAAWC,IAAQC,UAAxB,UACE,8BACE,qBAAKF,UAAWC,IAAQE,MAAOC,IAAI,OAErC,gFACA,uBACA,uBAAMC,SAzCY,SAACC,GACrBA,EAAEC,iBAEF,IAAMC,EAAkBb,EAAiBc,QAAQnB,MAC3CoB,EAAkBb,EAAiBY,QAAQnB,MAEjDqB,MAAM,6BAA8B,CAClCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAUT,EACVU,SAAUR,MAGXS,MAAK,SAACC,GACL,OAAIA,EAAIC,GACCD,EAAIE,OAEJF,EAAIE,OAAOH,MAAK,SAACI,GACtB,MAAM,IAAIC,MAAMD,EAAOA,EAAKE,YAAc,6BAI/CN,MAAK,SAACI,GACLzB,EAAQnB,MAAM4C,EAAKG,cACnBjC,EAAQkC,QAAQ,iBAEjBC,OAAM,SAACtB,GACNuB,QAAQC,IAAIxB,OAWd,UACE,sBAAKN,UAAWC,IAAQ8B,QAAxB,UACE,uCACA,uBACEC,KAAK,WACLC,GAAG,WACHC,UAAQ,EACRC,IAAKxC,OAGT,sBAAKK,UAAWC,IAAQ8B,QAAxB,UACE,6CACA,uBACEC,KAAK,WACLC,GAAG,WACHC,UAAQ,EACRC,IAAKtC,OAGT,qBAAKG,UAAWC,IAAQmC,QAAxB,SACE,oDCpEKC,EAJE,WACf,OAAO,cAAC,EAAD,KCqBMC,EApBO,WACpB,IAAM7C,EAAUC,cACVI,EAAUC,qBAAWzB,GAU3B,OACE,gCACE,gDACA,wBAAQiE,QAZU,SAACjC,GACrBA,EAAEC,iBACFsB,QAAQC,IAAIhC,EAAQpB,YACpBoB,EAAQlB,SACRiD,QAAQC,IAAIhC,EAAQpB,YAEpBe,EAAQkC,QAAQ,MAMd,yBCISa,MAhBf,WACE,IAAM1C,EAAUC,qBAAWzB,GAC3B,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOmE,KAAK,IAAZ,WACI3C,EAAQpB,YAAc,cAAC,EAAD,IACvBoB,EAAQpB,YAAc,cAAC,IAAD,CAAUgE,GAAG,kBAEtC,eAAC,IAAD,CAAOD,KAAK,aAAZ,UACG3C,EAAQpB,YAAc,cAAC,EAAD,KACrBoB,EAAQpB,YAAc,cAAC,IAAD,CAAUgE,GAAG,aCV7CC,IAASC,OACP,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,U,kBCZ1BC,EAAOC,QAAU,CAAC,QAAU,0BAA0B,UAAY,4BAA4B,QAAU,0BAA0B,MAAQ,2B","file":"static/js/main.4ec45fc0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  // const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(null);\n\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = (token) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import { useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const usernameInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const enteredUsername = usernameInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    fetch(\"http://localhost:5000/auth\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: enteredUsername,\n        password: enteredPassword,\n      }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            throw new Error(data ? data.description : \"fuck, it's an error\");\n          });\n        }\n      })\n      .then((data) => {\n        authCtx.login(data.access_token);\n        history.replace(\"/dashboard\");\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div className={classes.container}>\n      <div>\n        <img className={classes.image} alt=\"\" />\n      </div>\n      <h2>원룸만Lab 상품관리</h2>\n      <br />\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label>ID</label>\n          <input\n            type=\"username\"\n            id=\"username\"\n            required\n            ref={usernameInputRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label>PASSWORD</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>LOGIN</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from \"../components/Auth/AuthForm\";\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../store/auth-context\";\n\nconst DashboardPage = () => {\n  const history = useHistory();\n  const authCtx = useContext(AuthContext);\n  const logoutHandler = (e) => {\n    e.preventDefault();\n    console.log(authCtx.isLoggedIn);\n    authCtx.logout();\n    console.log(authCtx.isLoggedIn);\n\n    history.replace(\"/\");\n  };\n\n  return (\n    <div>\n      <h1>Dashboard Page</h1>\n      <button onClick={logoutHandler}>Log out</button>\n    </div>\n  );\n};\n\nexport default DashboardPage;\n","import { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport AuthPage from \"./pages/AuthPage\";\nimport DashboardPage from \"./pages/DashboardPage\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  return (\n    <Switch>\n      <Route path=\"/\">\n        {!authCtx.isLoggedIn && <AuthPage />}\n        {authCtx.isLoggedIn && <Redirect to=\"/dashboard\" />}\n      </Route>\n      <Route path=\"/dashboard\">\n        {authCtx.isLoggedIn && <DashboardPage />}\n        {!authCtx.isLoggedIn && <Redirect to=\"/\" />}\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"AuthForm_actions__1VNhY\",\"container\":\"AuthForm_container__c83gh\",\"control\":\"AuthForm_control__2fVSU\",\"image\":\"AuthForm_image__3dmI2\"};"],"sourceRoot":""}