{"ast":null,"code":"var _jsxFileName = \"/Users/chansollim/Desktop/dev/soldOut/main/front/react/src/components/Update/Update.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Update.module.css\";\nimport Status from \"./Status\";\nimport ProductList from \"./ProductList\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedProducts, setLoadedProducts] = useState([]);\n  const [loadedNumb, setLoadedNumb] = useState(0);\n\n  const clickHandler = e => {\n    setIsLoading(true); //sending a get request to localhost:5000\n\n    fetch(\"http://localhost:5000/update\").then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        setIsLoading(true);\n        alert(\"sth went wrong\");\n        return res.json().then(data => {\n          throw new Error(data ? data.description : \"fuck, it's an error\");\n        });\n      }\n    }).then(data => {\n      setLoadedProducts(data);\n      setLoadedNumb(data.length);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Status, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Update, \"daHNwgMBsUHpAUlQla/F0gRi++M=\");\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["/Users/chansollim/Desktop/dev/soldOut/main/front/react/src/components/Update/Update.js"],"names":["classes","Status","ProductList","useState","Update","isLoading","setIsLoading","loadedProducts","setLoadedProducts","loadedNumb","setLoadedNumb","clickHandler","e","fetch","then","res","ok","json","alert","data","Error","description","length","catch","console","log","container"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AAC1BN,IAAAA,YAAY,CAAC,IAAD,CAAZ,CAD0B,CAE1B;;AACAO,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;AACbT,MAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,UAAIS,GAAG,CAACC,EAAR,EAAY;AACV,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAFD,MAEO;AACLX,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAY,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACA,eAAOH,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAiBK,IAAD,IAAU;AAC/B,gBAAM,IAAIC,KAAJ,CAAUD,IAAI,GAAGA,IAAI,CAACE,WAAR,GAAsB,qBAApC,CAAN;AACD,SAFM,CAAP;AAGD;AACF,KAZH,EAaGP,IAbH,CAaSK,IAAD,IAAU;AACdX,MAAAA,iBAAiB,CAACW,IAAD,CAAjB;AACAT,MAAAA,aAAa,CAACS,IAAI,CAACG,MAAN,CAAb;AACD,KAhBH,EAiBGC,KAjBH,CAiBUX,CAAD,IAAO;AACZY,MAAAA,OAAO,CAACC,GAAR,CAAYb,CAAZ;AACD,KAnBH;AAoBD,GAvBD;;AAyBA,sBACE;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAAC0B,SAAxB;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CApCD;;GAAMtB,M;;KAAAA,M;AAsCN,eAAeA,MAAf","sourcesContent":["import classes from \"./Update.module.css\";\nimport Status from \"./Status\";\nimport ProductList from \"./ProductList\";\nimport { useState } from \"react\";\n\nconst Update = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedProducts, setLoadedProducts] = useState([]);\n  const [loadedNumb, setLoadedNumb] = useState(0);\n\n  const clickHandler = (e) => {\n    setIsLoading(true);\n    //sending a get request to localhost:5000\n    fetch(\"http://localhost:5000/update\")\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          setIsLoading(true);\n          alert(\"sth went wrong\");\n          return res.json().then((data) => {\n            throw new Error(data ? data.description : \"fuck, it's an error\");\n          });\n        }\n      })\n      .then((data) => {\n        setLoadedProducts(data);\n        setLoadedNumb(data.length);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div className={classes.container}>\n      <Status />\n      <ProductList/>\n    </div>\n  );\n};\n\nexport default Update;\n"]},"metadata":{},"sourceType":"module"}